name: 'Setup Test Environment'
description: 'Setup complete test environment for Auto Job Apply automation'

runs:
  using: 'composite'
  steps:
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install system dependencies
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libpq-dev \
          python3-dev \
          build-essential \
          libopencv-dev \
          python3-opencv \
          xvfb \
          chromium-browser \
          chromium-chromedriver \
          postgresql-client

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache Flutter dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.pub-cache
          frontend/.dart_tool
        key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
        restore-keys: |
          ${{ runner.os }}-flutter-

    - name: Install Python dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install -r automation/requirements.txt
        pip install pytest pytest-html pytest-json-report pytest-cov

    - name: Install Flutter dependencies
      shell: bash
      run: |
        cd frontend
        flutter pub get
        flutter config --enable-web

    - name: Setup PostgreSQL database
      shell: bash
      run: |
        # Start PostgreSQL service
        sudo systemctl start postgresql
        sudo systemctl enable postgresql
        
        # Create database and user
        sudo -u postgres createdb AutoJobApply || true
        sudo -u postgres psql -c "CREATE USER testuser WITH PASSWORD 'testpass';" || true
        sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE AutoJobApply TO testuser;" || true
        
        # Create tables
        python create_database_tables.py
      env:
        DATABASE_URL: postgresql://testuser:testpass@localhost:5432/AutoJobApply

    - name: Start backend services
      shell: bash
      run: |
        # Start all backend services in background
        cd backend/auth && python -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python test_server.py &
        cd backend/core && python -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python test_server.py &
        cd backend/ml && python -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python test_server.py &
        cd backend/payment && python -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python test_server.py &
        
        # Wait for services to start
        sleep 30
        
        # Verify services are running
        curl -f http://localhost:8001/health || exit 1
        curl -f http://localhost:8002/health || exit 1
        curl -f http://localhost:8003/health || exit 1
        curl -f http://localhost:8004/health || exit 1
        
        echo "âœ… All backend services are running"
